CC		?= gcc
CXX		?= g++
AR		= ar
CXXFLAGS	= -std=c++11 -ggdb -Ofast -Os -fPIC -W -Wall -Wno-unused-parameter -Wno-unused-variable -Wno-deprecated-declarations
TCFLAGS		= -Wno-unused-but-set-variable -Wno-unknown-warning-option
EXTFLAGS	=
SRCDIR		= src
BUILDDIR	= build
TARGETDIR	= bin
TESTDIR	    = test
LIBPATH		= lib
SRCEXT		= cpp
SOURCES		= $(shell find $(SRCDIR) -type f -name *.$(SRCEXT))
TESTSRCS	= $(shell find $(TESTDIR) -type f -name *.$(SRCEXT))
OBJECTS		= $(patsubst $(SRCDIR)/%,$(BUILDDIR)/%,$(SOURCES:.$(SRCEXT)=.o))
TESTOBJS	= $(patsubst $(TESTDIR)/%,$(TESTDIR)/%,$(TESTSRCS:.$(SRCEXT)=.o))
HEADERS		= -Iinclude -I$(LIBPATH) -I.
ANAME		= $(TARGETDIR)/libnogdb.a
SONAME		= $(TARGETDIR)/libnogdb.so
DEPOBJECTS	= $(LIBPATH)/lmdb/*.o
DEPENDENCIES	= $(LIBPATH)/lmdb/liblmdb.a
LDFLAGS		?=
TESTPREFIX	?= runtest
TESTFLAGS   = -DTEST_CONTEXT_OPERATIONS -DTEST_SCHEMA_OPERATIONS -DTEST_RECORD_OPERATIONS -DTEST_MISC_OPERATIONS -DTEST_GRAPH_OPERATIONS -DTEST_FIND_OPERATIONS -DTEST_INHERITANCE_OPERATIONS -DTEST_INDEX_OPERATIONS -DTEST_SCHEMA_TXN_OPERATIONS -DTEST_TXN_OPERATIONS -DTEST_SQL_OPERATIONS
UNAME_OS	= $(shell cat /etc/os-release 2> /dev/null | grep -e '^ID=' | cut -d'=' -f2 | tr -cd '[[:alnum:]]._-')
CCNAME      = $(shell $(CXX) --version 2> /dev/null | grep -oe 'clang')
LEMONDIR	= $(LIBPATH)/lemonxx
LEMONPP		= $(LIBPATH)/lemon++

ifneq (,$(filter $(UNAME_OS), rhel centos))
	EXTFLAGS=
else
	EXTFLAGS+=-fsanitize=address
endif

ifneq ($(CCNAME), clang)
    LDFLAGS+=-pthread -latomic
endif

ifeq (, $(wildcard $(SRCDIR)/sql_parser.cpp))
	SOURCES += $(SRCDIR)/sql_parser.cpp
endif


all: verbose lmdb $(ANAME) $(SONAME)

verbose:
	@echo "Build environment and variables..."
	@echo "CC=$(CC)"
	@echo "CXX=$(CXX)"
	@echo "CCNAME=$(CCNAME)"
	@echo "UNAME_OS=$(UNAME_OS)"
	@echo "LDFLAGS=$(LDFLAGS)"
	@echo "EXTFLAGS=$(EXTFLAGS)"
	@echo "TESTPREFIX=$(TESTPREFIX)"

lmdb:
	@echo "Compiling dependencies..."
	@cd lib/lmdb; make
	@echo "All dependencies have been compiled... [Done]"

$(ANAME): $(OBJECTS)
	@echo "Building nogdb static library... "
	mkdir -p $(TARGETDIR)
	$(AR) rcs $@ $(OBJECTS) $(DEPOBJECTS)
	@echo "nogdb static library has been created... [Done]"

$(SONAME): $(OBJECTS)
	@echo "Building nogdb shared library... "
	$(CXX) -L/usr/local/lib -shared -o $@ $(OBJECTS) $(DEPENDENCIES) $(LDFLAGS)
	@echo "nogdb shared library has been created... [Done]"

$(BUILDDIR)/%.o: $(SRCDIR)/%.$(SRCEXT)
	@mkdir -p $(BUILDDIR)
	$(CXX) $(CXXFLAGS) $(HEADERS) -c $< -o $@

$(SRCDIR)/sql.cpp: $(SRCDIR)/sql_parser.cpp
$(SRCDIR)/sql_parser.cpp: $(SRCDIR)/sql_parser.y $(LEMONPP)
	@cd $(SRCDIR); ../$(LEMONPP) -q -T../$(LEMONDIR)/lempar.cxx sql_parser.y
$(LEMONPP): $(LEMONDIR)/lemon.c $(LEMONDIR)/lempar.cxx
	$(CC) -DLEMONPLUSPLUS=1 -DTEMPLATE_EXTENSION=\".cxx\" -o $@ $(LEMONDIR)/lemon.c

test: lmdb $(ANAME) $(SONAME) $(TESTOBJS)
	$(CXX) $(CXXFLAGS) $(TCFLAGS) $(HEADERS) $(TESTOBJS) $(ANAME) -o $(TESTPREFIX) $(LDFLAGS)
	$(CXX) $(CXXFLAGS) $(TCFLAGS) $(HEADERS) $(TESTOBJS) -o $(TESTPREFIX) $(SONAME) $(LDFLAGS)
	@./$(TESTPREFIX); rm -rf $(TESTPREFIX).db

test_address: lmdb $(ANAME) $(SONAME) $(TESTOBJS)
	$(CXX) $(CXXFLAGS) $(TCFLAGS) $(HEADERS) $(TESTOBJS) $(ANAME) -o $(TESTPREFIX)_debug_address $(LDFLAGS) $(EXTFLAGS)
	$(CXX) $(CXXFLAGS) $(TCFLAGS) $(HEADERS) $(TESTOBJS) -o $(TESTPREFIX)_debug_address $(SONAME) $(LDFLAGS) $(EXTFLAGS)
	@./$(TESTPREFIX)_debug_address; rm -rf $(TESTPREFIX).db

$(TESTDIR)/%.o: $(TESTDIR)/%.$(SRCEXT)
	$(CXX) $(CXXFLAGS) $(TCFLAGS) $(TESTFLAGS) $(HEADERS) -c $< -o $@

install:
	@printf "Installing libnogdb..."
	@mkdir -p /usr/local/lib
	@cp $(TARGETDIR)/* /usr/local/lib
	@mkdir -p /usr/local/include/nogdb
	@mkdir -p /usr/local/include/nogdb/lmdb
	@mkdir -p /usr/local/include/nogdb/boost
	@cp include/*.h /usr/local/include/nogdb
	@cp lib/lmdb/*.h /usr/local/include/nogdb/lmdb
	@cp -R lib/boost/* /usr/local/include/nogdb/boost
	@echo " [Done]"

uninstall:
	@printf "Uninstalling libnogdb..."
	@rm -f /usr/local/lib/libnogdb.*
	@rm -rf /usr/local/include/nogdb
	@echo " [Done]"

clean:
	@printf "Cleaning all executable objects and libs..."
	@rm -f $(TESTPREFIX) $(TESTPREFIX)_debug_address
	@find * -name "*.o" -type f -exec rm -f {} \;
	@find * -name "*.a" -type f -exec rm -f {} \;
	@find * -name "*.so" -type f -exec rm -f {} \;
	@echo " [Done]"

.PHONY: all lmdb test install uninstall clean
